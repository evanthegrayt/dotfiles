# vi: set ft=sh:
# This file is shared between my zshrc and bashrc.
# Only put options that both languages can use in this file.

if grep -q 'evanthegra"yt@vi"val"di.ne"t' $HOME/.gitconfig && \
    [[ ! $( hostname | tr '[:upper:]' '[:lower:]' ) =~ 'evan' ]]; then
    echo 'You are probably using the wrong git configuration.'
    echo 'Please update the user name and email address in ~/.gitconfig'
    echo '...unless you want to give evanthegrayt credit for your work.'
fi

MY_CONFIG_FILES=(
    $HOME/.aliases
    $HOME/.colors
)

# Environmental variables

if [[ $( uname -s ) == 'Darwin' ]]; then
    export CLICOLOR=1
    export LSCOLORS='ExGxcxcxcxexexcxcxexex'
fi

export EDITOR='vim'
export VISUAL=$EDITOR
export FCEDIT=$EDITOR
export GEM_OPEN_EDITOR=$EDITOR
export GREP_COLOR='07;38;5;74'
export LANG=en_US.UTF-8
export LESSPIPE=$( which src-hilite-lesspipe.sh )
export LESSOPEN="| ${LESSPIPE} %s"
export LESS='-JmNirU'
export MANPAGER='less'
export GIT_EDITOR=$EDITOR
export SIMPLE_BACKUP_SUFFIX='.sav'
export IRC_CLIENT='irssi'
export SCM_CHECK=true
export PAGER='less'
export PATH=\
.:\
/opt/homebrew/bin:\
/usr/local/bin:\
/usr/bin:\
/bin:\
/usr/sbin:\
/sbin:\
/opt/X11/bin:\
$HOME/bin:\
$HOME/bin/ruby:\
$HOME/scripts/bin:\
$PATH

for file in ${MY_CONFIG_FILES[@]}; do [[ -f $file ]] && source "$file"; done

unset MAILCHECK file

rails() {
    local commands=($@)
    local container=${CONTAINER:-web}

    if [[ -f ./docker-compose.yml ]]; then
        docker-compose run $container bundle exec rails "${commands[@]}"
    elif which bundle >/dev/null && [[ -f ./Gemfile && -d ./.bundle ]]; then
        bundle exec rails "${commands[@]}"
    elif [[ -x $HOME/.rbenv/shims/rails ]]; then
        $HOME/.rbenv/shims/rails "${commands[@]}"
    else
        command rails "${commands[@]}"
    fi
}

mcd() {
    local dir
    local OPTIND
    local verbose=false

    while getopts 'v' opts; do
        case $opts in
            v) verbose=true ;;
        esac
    done
    shift $(( OPTIND - 1 ))

    dir="$1"

    if [[ -z $dir ]]; then
        echo >&2 "Usage: mcd [DIRECTORY]"
        return 1
    elif [[ -d $dir ]]; then
        cd "$dir"
    else
        $verbose && echo "Creating directory '$dir'"
        mkdir -p "$dir" && cd "$dir"
    fi
}

if [[ -f $HOME/.ghcup/env ]]; then
    source "$HOME/.ghcup/env"
fi

if [[ -x /opt/homebrew/bin/brew ]]; then
    eval "$( /opt/homebrew/bin/brew shellenv )"
fi

if [[ -d $HOME/.rbenv/shims ]]; then
    eval "$( rbenv init - )"
elif [[ -d $HOME/.rvm/bin ]]; then
    export PATH="$PATH:$HOME/.rvm/bin"
fi

if [[ -e $HOME/.shellrc.local ]]; then
    source "$HOME/.shellrc.local"
fi
